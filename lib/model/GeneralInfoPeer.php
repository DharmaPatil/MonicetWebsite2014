<?php


/**
 * Skeleton subclass for performing query and update operations on the 'general_info' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.0 on:
 *
 * Fri Dec 18 17:25:55 2009
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class GeneralInfoPeer extends BaseGeneralInfoPeer {
    public static function doSelectByCompany($request=null) {
      
        $request = (! is_null($request) && $request instanceof sfWebRequest) ? $request : sfContext::getInstance()->getRequest();
      
        $user = sfContext::getInstance()->getUser()->getGuardUser();
        $company = CompanyPeer::doSelectUserCompany($user->getId());
        if ($company) {
            $query = GeneralInfoQuery::create()
                ->filterByCompanyId($company->getId());
                
        } else {
            $query = GeneralInfoQuery::create();
        }
        //$ordem = 'GeneralInfoPeer::'.strtoupper($request->getParameter('sort', 'valid'));
        $query = $query
            ->orderBy(mfText::to_camel_case($request->getParameter('sort', 'valid'), true), $request->getParameter('order', 'desc'))
            //->addDescendingOrderByColumn($ordem)
        ->paginate($request->getParameter('page', 1), 20);
        return $query;
    }

  public static function getTotalForPeriod($type, $year, $month) {
    $date1 = $year."-";
    $date2 = $year."-";  
    if (($type == '1') && $month) {
        $date1 .= $month."-1";
        $date2 .= $month."-" . idate('d', mktime(0, 0, 0, ($month + 1), 0, $year)); 
    } else {
        $date1 .= "1-1";
        $date2 .= "12-31";
    }
    //TODO refactor
    $c = new Criteria();
    $c->addAnd(GeneralInfoPeer::VALID, true, Criteria::EQUAL);
    $c->addAnd(GeneralInfoPeer::DATE, $date1, Criteria::GREATER_EQUAL);
    $c->addAnd(GeneralInfoPeer::DATE, $date2, Criteria::LESS_EQUAL);

    return GeneralInfoPeer::doCount($c);
  }
} // GeneralInfoPeer




