<?php



/**
 * Skeleton subclass for performing query and update operations on the 'chart_iframe_information' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.5.6 on:
 *
 * Sat Mar 10 15:04:32 2012
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class ChartIframeInformationPeer extends BaseChartIframeInformationPeer {
  
  public static function retrieveByHash($hash) {
    $c = new Criteria();
    $c->add(ChartIframeInformationPeer::HASH, $hash, Criteria::EQUAL);
    return ChartIframeInformationPeer::doSelectOne($c);
  }
  
  /*
   * Implementation of doSelect, customized to call only items from the current user's company
   */
  public static function doSelectByCompany(Criteria $criteria, PropelPDO $con = null)
  {
    
    if(sfContext::getInstance()->getUser()->isAuthenticated()) {
        $user = sfContext::getInstance()->getUser()->getGuardUser();
        $company = CompanyPeer::doSelectUserCompany($user->getId());
        if ($company) {
            $criteria->addAnd(ChartIframeInformationPeer::COMPANY_ID, $company->getId(), Criteria::EQUAL);    
        }
    }
    
    return parent::doSelect($criteria, $con);
  }
  
  /*
   * Implementation of doCount, customized to count only items from the current user's company 
   */
  public static function doCountByCompany(Criteria $criteria, $distinct = false, PropelPDO $con = null)
  {
    if(sfContext::getInstance()->getUser()->isAuthenticated()) {
      $user = sfContext::getInstance()->getUser()->getGuardUser();
      $company = CompanyPeer::doSelectUserCompany($user->getId());
      if ($company) {
          $criteria->addAnd(ChartIframeInformationPeer::COMPANY_ID, $company->getId(), Criteria::EQUAL);    
      }
    }
    
    return parent::doCount($criteria, $distinct, $con);
  }
  
} // ChartIframeInformationPeer
